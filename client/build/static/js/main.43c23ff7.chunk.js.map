{"version":3,"sources":["components/layout/spinner.gif","actions/alert.js","actions/types.js","utils/setAuthToken.js","actions/auth.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/layout/Alert.js","actions/profile.js","components/dashboard/DashboardActions.js","components/dashboard/Experience.js","components/dashboard/Education.js","components/layout/Spinner.js","components/dashboard/Dashboard.js","components/profile-forms/CreateProfile.js","components/profile-forms/EditProfile.js","components/profile-forms/AddExperience.js","components/profile-forms/AddEducation.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/ProfileExperience.js","components/profile/ProfileEducation.js","components/profile/ProfileGithub.js","components/profile/Profile.js","components/posts/PostItem.js","actions/post.js","components/posts/PostForm.js","components/posts/Posts.js","components/post/CommentForm.js","components/post/CommentItem.js","components/post/Post.js","components/routing/PrivateRoute.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/index.js","store.js","App.js","index.js"],"names":["module","exports","setAlert","msg","alertType","timeout","dispatch","id","uuid","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","data","connect","state","auth","logout","isAuthenticated","loading","authLinks","to","className","onClick","href","guestLinks","register","name","email","password","config","body","JSON","stringify","post","errors","response","forEach","error","useState","password2","formData","setFormData","onChange","e","target","value","onSubmit","preventDefault","placeholder","required","minLength","login","alerts","alert","length","map","key","class","getCurrentProfile","statusText","status","createProfile","FormData","history","edit","push","DashboardActions","deleteExperience","delete","experience","experiences","exp","_id","company","title","format","from","deleteEducation","education","educations","edu","school","degree","src","spinner","style","width","margin","display","alt","profile","deleteAccount","window","confirm","user","useEffect","Spinner","withRouter","website","location","skills","githubusername","bio","twitter","facebook","linkedin","youtube","instagram","displaySocialInputs","toggleSocialInputs","wesbite","join","social","addExperience","put","current","description","toDateDisabled","toggleDisabled","checked","disabled","cols","rows","addEducation","fieldofstudy","ProfileItem","avatar","slice","skill","index","getProfiles","profiles","ProfileTop","rel","ProfileAbout","trim","split","ProfileExperience","ProfileEducation","repos","getGithubRepos","username","repo","html_url","stargazers_count","watchers_count","forks_count","getProfileById","userId","match","params","PostItem","addLike","removeLike","deletePost","text","likes","comments","date","showActions","defaultProps","addPost","setText","getPosts","posts","addComment","postId","deleteComment","commentId","comment","getPost","Component","component","rest","render","props","initialState","getItem","combineReducers","action","filter","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","Landing","Register","Login","Profiles","Profile","Dashboard","CreateProfile","EditProfile","AddExperience","AddEducation","Posts","Post","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.43c23ff7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.4ed6a64a.gif\";","import { v4 as uuid } from 'uuid';\r\nimport { SET_ALERT, REMOVE_ALERT } from './types';\r\n\r\n//want to be able to dispatch more than action type from this function, will use dispatch fxn, part of thunk middleware\r\nexport const setAlert = (msg, alertType, timeout = 5000) => dispatch => {\r\n  const id = uuid();\r\n  dispatch({\r\n    type: SET_ALERT,\r\n    payload: { msg, alertType, id }\r\n  });\r\n\r\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout); //will remove alert after 5 seconds, matches id of the alert\r\n};\r\n","export const SET_ALERT = 'SET_ALERT'; //this makes it easier to change, gives you a centralized file of all my types\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL'; //alerts only affect React, not the backend\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const GET_PROFILE = 'GET_PROFILE';\r\nexport const GET_PROFILES = 'GET_PROFILES';\r\nexport const GET_REPOS = 'GET_REPOS';\r\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE';\r\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\r\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\r\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED';\r\nexport const GET_POSTS = 'GET_POSTS';\r\nexport const POST_ERROR = 'POST_ERROR';\r\nexport const UPDATE_LIKES = 'UPDATE_LIKES';\r\nexport const DELETE_POST = 'DELETE_POST';\r\nexport const ADD_POST = 'ADD_POST';\r\nexport const GET_POST = 'GET_POST';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT';\r\n","//fxn that takes in token, if there, add to headers, if not, delete from headers\r\nimport axios from 'axios';\r\n\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common['x-auth-token'] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common['x-auth-token'];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_PROFILE\r\n} from './types';\r\nimport setAuthToken from '../utils/setAuthToken';\r\n\r\n//load user\r\nexport const loadUser = () => async dispatch => {\r\n  //if token in local storage, opt to always do that\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token); //will set token with the header if there is one\r\n  }\r\n\r\n  try {\r\n    const res = await axios.get('/api/auth');\r\n\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR\r\n    });\r\n  }\r\n};\r\n\r\n//Register user\r\nexport const register = ({ name, email, password }) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({ name, email, password });\r\n\r\n  try {\r\n    const res = await axios.post('/api/users', body, config); //this will get us our response\r\n\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors; //errors is an array we will receive in the event of a failure\r\n\r\n    if (errors) {\r\n      //check to see if there are any errors\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n    dispatch({\r\n      type: REGISTER_FAIL\r\n    });\r\n  }\r\n};\r\n\r\n//Login user\r\nexport const login = (email, password) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const res = await axios.post('/api/auth', body, config); //send body, send config\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors; //errors is an array we will receive in the event of a failure\r\n\r\n    if (errors) {\r\n      //check to see if there are any errors\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n    dispatch({\r\n      type: LOGIN_FAIL\r\n    });\r\n  }\r\n};\r\n\r\n//Logout / Clear the profile\r\nexport const logout = () => dispatch => {\r\n  dispatch({ type: CLEAR_PROFILE });\r\n  dispatch({ type: LOGOUT });\r\n};\r\n","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { logout } from '../../actions/auth';\r\n\r\nexport const Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\r\n  //want to make sure user is done loading before we replace Navbar\r\n  const authLinks = (\r\n    <ul>\r\n      <li>\r\n        <Link to='/profiles'>Developers</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/posts'>Posts</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/Dashboard'>\r\n          <i className='fas fa-sign-out-alt'></i>{' '}\r\n          <span className='hide-sm'>Dashboard</span>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <a onClick={logout} href='#!'>\r\n          <i className='fas fa-sign-out-alt'></i>{' '}\r\n          <span className='hide-sm'>Logout</span>\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  const guestLinks = (\r\n    <ul>\r\n      <li>\r\n        <Link to='/profiles'>Developers</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/register'>Register</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/login'>Login</Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  return (\r\n    <nav className='navbar bg-dark'>\r\n      <h1>\r\n        <Link to='/'>\r\n          <i className='fas fa-code' /> DevConnector\r\n        </Link>\r\n      </h1>\r\n      {!loading && (\r\n        <Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  auth: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar);\r\n","import React from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux'; //interact with the state to see if we are logged in; don't want to be able to access welcome page if signed in\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Landing = ({ isAuthenticated }) => {\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n\r\n  return (\r\n    <section className='landing'>\r\n      <div className='dark-overlay'>\r\n        <div className='landing-inner'>\r\n          <h1 className='x-large'>Developer Connector</h1>\r\n          <p className='lead'>\r\n            Create a developer profile/portfolio, share posts and get help from\r\n            other developers\r\n          </p>\r\n          <div className='buttons'>\r\n            <Link to='/register' className='btn btn-primary'>\r\n              Sign Up\r\n            </Link>\r\n            <Link to='/login' className='btn btn-light'>\r\n              Login\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nLanding.propTypes = {\r\n  isAuthenticated: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { setAlert } from '../../actions/alert';\r\nimport { register } from '../../actions/auth';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Using axios to access backend with the below, commented out code\r\n//import axios from 'axios';\r\n\r\n//can destructure props. Instead of Register = props, can do Register = ({ setAlert })\r\nconst Register = ({ setAlert, register, isAuthenticated }) => {\r\n  //will connect this method to redux\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    password2: ''\r\n  });\r\n\r\n  const { name, email, password, password2 } = formData; //destructuring data\r\n\r\n  const onChange = async e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value }); //by using e.target.name, we can use this key to format every field\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    if (password !== password2) {\r\n      setAlert('Passowrds do not match', 'danger'); //will generate id in alert.js, \"danger\" is the alert type\r\n    } else {\r\n      register({ name, email, password }); //going to take in object with name, email, and password\r\n\r\n      //I plan to implement this with a redux action, this is a successful attempt to register with React and Node.js working in tandem, result checked out in MongoDB Atlas with the creation of a new user\r\n      /*\r\n      const newUser = {\r\n        name,\r\n        email,\r\n        password\r\n      };\r\n\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        };\r\n\r\n        const body = JSON.stringify(newUser);\r\n\r\n        // first parameter is the route, second is the data, third is config, which has the header value/content-type\r\n        const res = await axios.post('/api/users', body, config); //need to do this b/c axios returns a promise\r\n        console.log(res.data);\r\n      } catch (err) {\r\n        console.error(err.response.data);\r\n      }\r\n      */\r\n    }\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Sign Up</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Create Your Account\r\n      </p>\r\n      <form className='form' onSubmit={e => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Name'\r\n            name='name'\r\n            value={name}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='email'\r\n            placeholder='Email Address'\r\n            name='email'\r\n            value={email}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          />\r\n          <small className='form-text'>\r\n            This site uses Gravatar so if you want a profile image, use a\r\n            Gravatar email\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            placeholder='Password'\r\n            name='password'\r\n            value={password}\r\n            onChange={e => onChange(e)}\r\n            minLength='6'\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            placeholder='Confirm Password'\r\n            name='password2'\r\n            value={password2}\r\n            onChange={e => onChange(e)}\r\n            minLength='6'\r\n          />\r\n        </div>\r\n        <input type='submit' className='btn btn-primary' value='Register' />\r\n      </form>\r\n      <p className='my-1'>\r\n        Already have an account? <Link to='/login'>Sign In</Link>\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nRegister.propTypes = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  register: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated //will give us everything from initialState\r\n});\r\n\r\nexport default connect(mapStateToProps, { setAlert, register })(Register);\r\n//setAlert portions will allow us to access props.setAlert\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { login } from '../../actions/auth'; //this is a prop\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  const { email, password } = formData; //destructuring data\r\n\r\n  const onChange = async e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value }); //by using e.target.name, we can use this key to format every field\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    login(email, password);\r\n  };\r\n\r\n  //Redirect if logged in\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Sign In</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Sign Into Your Account\r\n      </p>\r\n      <form className='form' onSubmit={e => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <input\r\n            type='email'\r\n            placeholder='Email Address'\r\n            name='email'\r\n            value={email}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            placeholder='Password'\r\n            name='password'\r\n            value={password}\r\n            onChange={e => onChange(e)}\r\n            minLength='6'\r\n          />\r\n        </div>\r\n        <input type='submit' className='btn btn-primary' value='Login' />\r\n      </form>\r\n      <p className='my-1'>\r\n        Don't have an account? <Link to='/register'>Sign Up</Link>\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated //will give us everything from initialState\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux'; //any time you want to interact a component with Redux, whether calling an action or getting a state, you want to use connect\r\n\r\nconst Alert = ({ alerts }) =>\r\n  alerts !== null &&\r\n  alerts.length > 0 &&\r\n  alerts.map(alert => (\r\n    //whenever you map through jsx like this, it's a list and you need a unique key\r\n    <div key={alert.id} class={`alert alert-${alert.alertType}`}>\r\n      {alert.msg}\r\n    </div>\r\n  )); //map fxn will do a foreach and return a jsx for each alert\r\n\r\nAlert.propTypes = {\r\n  alerts: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  alerts: state.alert //alert keyword from root reducer in index.js\r\n}); //mapping redux state to a prop in this component, so you have access to it. In this case, it's the array of alerts\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\n\r\nimport {\r\n  GET_PROFILE,\r\n  GET_PROFILES,\r\n  PROFILE_ERROR,\r\n  UPDATE_PROFILE,\r\n  CLEAR_PROFILE,\r\n  ACCOUNT_DELETED,\r\n  GET_REPOS\r\n} from './types';\r\nimport { set } from 'mongoose';\r\n\r\n// Get current users profile\r\nexport const getCurrentProfile = () => async dispatch => {\r\n  try {\r\n    const res = await axios.get('/api/profile/me');\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data //gives all profile data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n//Get all profiles\r\nexport const getProfiles = () => async dispatch => {\r\n  dispatch({ type: CLEAR_PROFILE }); //will hopefully prevent flashing of past users profile\r\n\r\n  try {\r\n    const res = await axios.get('/api/profile'); //array of all profiles\r\n\r\n    dispatch({\r\n      type: GET_PROFILES,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n//Get profile by ID\r\nexport const getProfileById = userId => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/profile/user/${userId}`);\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n//Get Github repos\r\nexport const getGithubRepos = username => async dispatch => {\r\n  //not going to inter=act with github from the client side\r\n  try {\r\n    const res = await axios.get(`/api/profile/github/${username}`);\r\n\r\n    dispatch({\r\n      type: GET_REPOS,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n//Create or update a profile\r\nexport const createProfile = (\r\n  FormData,\r\n  history,\r\n  edit = false\r\n) => async dispatch => {\r\n  //could create separate function for editing, but this, I believe, will be more convenient\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n\r\n    const res = await axios.post('/api/profile', FormData, config);\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert(edit ? 'Profile Updatd' : 'Profile Created', 'success'));\r\n\r\n    //If we are creating, we will redirect\r\n\r\n    if (!edit) {\r\n      history.push('/dashboard');\r\n    }\r\n  } catch (err) {\r\n    const errors = err.response.data.errors; //errors is an array we will receive in the event of a failure\r\n\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger'))); //if we forget status, skills, etc. this will be shown in an alert\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Add experience\r\nexport const addExperience = (FormData, history) => async dispatch => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n\r\n    const res = await axios.put('/api/profile/experience', FormData, config);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert('Experience Added', 'success'));\r\n    history.push('/dashboard');\r\n  } catch (err) {\r\n    const errors = err.response.data.errors; //errors is an array we will receive in the event of a failure\r\n\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger'))); //if we forget status, skills, etc. this will be shown in an alert\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// Add Education\r\nexport const addEducation = (FormData, history) => async dispatch => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n\r\n    const res = await axios.put('/api/profile/education', FormData, config);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert('Education Added', 'success'));\r\n    history.push('/dashboard');\r\n  } catch (err) {\r\n    const errors = err.response.data.errors; //errors is an array we will receive in the event of a failure\r\n\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger'))); //if we forget status, skills, etc. this will be shown in an alert\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n//Delete Experience\r\nexport const deleteExperience = id => async dispatch => {\r\n  try {\r\n    const res = await axios.delete(`/api/profile/experience/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert('Experience Removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n//Delete Education\r\nexport const deleteEducation = id => async dispatch => {\r\n  try {\r\n    const res = await axios.delete(`/api/profile/education/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert('Education Removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n//Delete Account and profile\r\nexport const deleteAccount = () => async dispatch => {\r\n  if (window.confirm('Are you sure? This cannot be undone!')) {\r\n    try {\r\n      await axios.delete('api/profile');\r\n\r\n      dispatch({ type: CLEAR_PROFILE });\r\n      dispatch({ type: ACCOUNT_DELETED });\r\n\r\n      dispatch(setAlert('Your account has been permanently deleted'));\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status }\r\n      });\r\n    }\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst DashboardActions = () => {\r\n  return (\r\n    <div class='dash-buttons'>\r\n      <Link to='/edit-profile' class='btn btn-light'>\r\n        <i class='fas fa-user-circle text-primary'></i> Edit Profile\r\n      </Link>\r\n      <Link to='/add-experience' class='btn btn-light'>\r\n        <i class='fab fa-black-tie text-primary'></i> Add Experience\r\n      </Link>\r\n      <Link to='/add-education' class='btn btn-light'>\r\n        <i class='fas fa-graduation-cap text-primary'></i> Add Education\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardActions;\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { deleteExperience } from '../../actions/profile';\r\n\r\nconst Experience = ({ experience, deleteExperience }) => {\r\n  const experiences = experience.map(exp => (\r\n    <tr key={exp._id}>\r\n      <td>{exp.company}</td>\r\n      <td className='hide-sm'>{exp.title}</td>\r\n      <td>\r\n        <Moment format='YYYY/MM/DD'>{exp.from}</Moment> -{' '}\r\n        {exp.to === null ? (\r\n          ' Now'\r\n        ) : (\r\n          <Moment format='YYYY/MM/DD'>{exp.to}</Moment>\r\n        )}\r\n      </td>\r\n      <td>\r\n        <button\r\n          onClick={() => deleteExperience(exp._id)}\r\n          className='btn btn-danger'\r\n        >\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  )); //map through array\r\n  return (\r\n    <Fragment>\r\n      <h2 className='my2'>Experience Credentials</h2>\r\n      <table className='table'>\r\n        <thead>\r\n          <tr>\r\n            <th>Company</th>\r\n            <th className='hide-sm'>Title</th>\r\n            <th className='hide-sum'>Years</th>\r\n            <th />\r\n          </tr>\r\n        </thead>\r\n        <body>{experiences}</body>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nExperience.propTypes = {\r\n  experience: PropTypes.array.isRequired, //ptar because experience is an array\r\n  deleteExperience: PropTypes.func.isRequired //ptfr\r\n};\r\n\r\nexport default connect(null, { deleteExperience })(Experience);\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { deleteEducation } from '../../actions/profile';\r\n\r\nconst Education = ({ education, deleteEducation }) => {\r\n  const educations = education.map(edu => (\r\n    <tr key={edu._id}>\r\n      <td>{edu.school}</td>\r\n      <td className='hide-sm'>{edu.degree}</td>\r\n      <td>\r\n        <Moment format='YYYY/MM/DD'>{edu.from}</Moment> -{' '}\r\n        {edu.to === null ? (\r\n          ' Now'\r\n        ) : (\r\n          <Moment format='YYYY/MM/DD'>{edu.to}</Moment>\r\n        )}\r\n      </td>\r\n      <td>\r\n        <button\r\n          onClick={() => deleteEducation(edu._id)}\r\n          className='btn btn-danger'\r\n        >\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  )); //map through array\r\n  return (\r\n    <Fragment>\r\n      <h2 className='my2'>Education Credentials</h2>\r\n      <table className='table'>\r\n        <thead>\r\n          <tr>\r\n            <th>School</th>\r\n            <th className='hide-sm'>Degree</th>\r\n            <th className='hide-sum'>Years</th>\r\n            <th />\r\n          </tr>\r\n        </thead>\r\n        <body>{educations}</body>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEducation.propTypes = {\r\n  education: PropTypes.array.isRequired, //ptar because experience is an array\r\n  deleteEducation: PropTypes.func.isRequired //ptfr\r\n};\r\n\r\nexport default connect(null, { deleteEducation })(Education);\r\n","//load a gif\r\nimport React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nexport default () => (\r\n  <Fragment>\r\n    <img\r\n      src={spinner}\r\n      style={{ width: '200px', margin: 'auto', display: 'block' }}\r\n      alt='Loading...'\r\n    />\r\n  </Fragment>\r\n);\r\n","//fetch all our data using an action, bring it in from redux state, pass it down to other components, education, etc.\r\n\r\nimport React, { Fragment, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile';\r\nimport DashboardActions from './DashboardActions';\r\nimport Experience from './Experience';\r\nimport Education from './Education';\r\nimport Spinner from '../layout/Spinner'; //fetching Spinner.js\r\n\r\nconst Dashboard = ({\r\n  getCurrentProfile,\r\n  deleteAccount,\r\n  auth: { user },\r\n  profile: { profile, loading }\r\n}) => {\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n  }, [getCurrentProfile]);\r\n  return loading && profile === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Dashboard</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user' /> Welcome {user && user.name}\r\n      </p>\r\n      {profile !== null ? (\r\n        <Fragment>\r\n          <DashboardActions />\r\n          <Experience experience={profile.experience} />\r\n          <Education education={profile.education} />\r\n          <div className='my-2'>\r\n            <button className='btn btn-danger' onClick={() => deleteAccount()}>\r\n              <i className='fas-user-minus'></i> Delete My Account\r\n            </button>\r\n          </div>\r\n        </Fragment>\r\n      ) : (\r\n        <Fragment>\r\n          <p>You have not yet set up a profile, please add some info</p>\r\n          <Link to='/create-profile' className='btn btn-primary my-1'>\r\n            Create Profile\r\n          </Link>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n//if profile is null and still loading, will show spinner\r\n\r\nDashboard.propTypes = {\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  deleteAccount: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(\r\n  Dashboard\r\n);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom'; //will allow us to redirect from the action\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile } from '../../actions/profile';\r\n\r\nconst CreateProfile = ({ createProfile, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    status: '',\r\n    skills: '',\r\n    githubusername: '',\r\n    bio: '',\r\n    twitter: '',\r\n    facebook: '',\r\n    linkedin: '',\r\n    youtube: '',\r\n    instagram: ''\r\n  });\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n  const {\r\n    //destructure them to use them as variables\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram\r\n  } = formData;\r\n\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    createProfile(formData, history);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Create Your Profile</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className='form' onSubmit={e => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <select name='status' value={status} onChange={e => onChange(e)}>\r\n            <option value='0'>* Select Professional Status</option>\r\n            <option value='Developer'>Developer</option>\r\n            <option value='Junior Developer'>Junior Developer</option>\r\n            <option value='Senior Developer'>Senior Developer</option>\r\n            <option value='Manager'>Manager</option>\r\n            <option value='Student or Learning'>Student or Learning</option>\r\n            <option value='Instructor'>Instructor or Teacher</option>\r\n            <option value='Intern'>Intern</option>\r\n            <option value='Other'>Other</option>\r\n          </select>\r\n          <small className='form-text'>\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Website'\r\n            name='website'\r\n            value={website}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Skills'\r\n            name='skills'\r\n            value={skills}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Github Username'\r\n            name='githubusername'\r\n            value={githubusername}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            placeholder='A short bio of yourself'\r\n            name='bio'\r\n            value={bio}\r\n            onChange={e => onChange(e)}\r\n          ></textarea>\r\n          <small className='form-text'>Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className='my-2'>\r\n          <button\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-twitter fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Twitter URL'\r\n                name='twitter'\r\n                value={twitter}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-facebook fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Facebook URL'\r\n                name='facebook'\r\n                value={facebook}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-youtube fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='YouTube URL'\r\n                name='youtube'\r\n                value={youtube}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-linkedin fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Linkedin URL'\r\n                name='linkedin'\r\n                value={linkedin}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-instagram fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Instagram URL'\r\n                name='instagram'\r\n                value={instagram}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nCreateProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { createProfile })(withRouter(CreateProfile)); //withRouter will allow us to pass in history object\r\n","import React, { Fragment, useState, useEffect } from 'react'; //have to have useEffect to run getcurrentprofile, so it effects the data and sends it down thru the state\r\nimport { Link, withRouter } from 'react-router-dom'; //will allow us to redirect from the action\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile, getCurrentProfile } from '../../actions/profile'; //used for both create and edit profile\r\n\r\nconst EditProfile = ({\r\n  profile: { profile, loading },\r\n  createProfile,\r\n  getCurrentProfile,\r\n  history\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    status: '',\r\n    skills: '',\r\n    githubusername: '',\r\n    bio: '',\r\n    twitter: '',\r\n    facebook: '',\r\n    linkedin: '',\r\n    youtube: '',\r\n    instagram: ''\r\n  });\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n\r\n    setFormData({\r\n      company: loading || !profile.company ? '' : profile.company,\r\n      wesbite: loading || !profile.website ? '' : profile.website,\r\n      location: loading || !profile.location ? '' : profile.location,\r\n      status: loading || !profile.status ? '' : profile.status,\r\n      skills: loading || !profile.skills ? '' : profile.skills.join(','),\r\n      githubusername:\r\n        loading || !profile.githubusername ? '' : profile.githubusername,\r\n      bio: loading || !profile.bio ? '' : profile.bio,\r\n      twitter: loading || !profile.social ? '' : profile.social.twitter,\r\n      facebook: loading || !profile.social ? '' : profile.social.facebook,\r\n      linkedin: loading || !profile.social ? '' : profile.social.linkedin,\r\n      youtube: loading || !profile.social ? '' : profile.social.youtube,\r\n      instagram: loading || !profile.social ? '' : profile.social.instagram\r\n    });\r\n  }, [loading, getCurrentProfile]); //when it loads, we want this to run\r\n\r\n  const {\r\n    //destructure them to use them as variables\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram\r\n  } = formData;\r\n\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    createProfile(formData, history, true);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Create Your Profile</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className='form' onSubmit={e => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <select name='status' value={status} onChange={e => onChange(e)}>\r\n            <option value='0'>* Select Professional Status</option>\r\n            <option value='Developer'>Developer</option>\r\n            <option value='Junior Developer'>Junior Developer</option>\r\n            <option value='Senior Developer'>Senior Developer</option>\r\n            <option value='Manager'>Manager</option>\r\n            <option value='Student or Learning'>Student or Learning</option>\r\n            <option value='Instructor'>Instructor or Teacher</option>\r\n            <option value='Intern'>Intern</option>\r\n            <option value='Other'>Other</option>\r\n          </select>\r\n          <small className='form-text'>\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Website'\r\n            name='website'\r\n            value={website}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Skills'\r\n            name='skills'\r\n            value={skills}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Github Username'\r\n            name='githubusername'\r\n            value={githubusername}\r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            placeholder='A short bio of yourself'\r\n            name='bio'\r\n            value={bio}\r\n            onChange={e => onChange(e)}\r\n          ></textarea>\r\n          <small className='form-text'>Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className='my-2'>\r\n          <button\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-twitter fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Twitter URL'\r\n                name='twitter'\r\n                value={twitter}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-facebook fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Facebook URL'\r\n                name='facebook'\r\n                value={facebook}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-youtube fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='YouTube URL'\r\n                name='youtube'\r\n                value={youtube}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-linkedin fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Linkedin URL'\r\n                name='linkedin'\r\n                value={linkedin}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-instagram fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Instagram URL'\r\n                name='instagram'\r\n                value={instagram}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEditProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\r\n  withRouter(EditProfile)\r\n); //withRouter will allow us to pass in history object\r\n","import React, { Fragment, useState } from 'react'; //racfp shortcut will give us a form with some state\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addExperience } from '../../actions/profile';\r\n\r\nconst AddExperience = ({ addExperience, history }) => {\r\n  //using State hook can ultimately be nicer and cleaner\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    title: '',\r\n    location: '',\r\n    from: '',\r\n    to: '', //disable to if current is true\r\n    current: false,\r\n    description: ''\r\n  });\r\n\r\n  const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n  const { company, title, location, from, to, current, description } = formData;\r\n\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value }); //object state with current form data, take our key (name), and set to target.value\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 class='large text-primary'>Add An Experience</h1>\r\n      <p class='lead'>\r\n        <i class='fas fa-code-branch'></i> Add any developer/programming\r\n        positions that you have had in the past\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form\r\n        class='form'\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          addExperience(formData, history);\r\n        }}\r\n      >\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Job Title'\r\n            name='title'\r\n            value={title}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <h4>From Date</h4>\r\n          <input\r\n            type='date'\r\n            name='from'\r\n            value={from}\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <p>\r\n            <input\r\n              type='checkbox'\r\n              name='current'\r\n              checked={current}\r\n              value={current}\r\n              onChange={e => {\r\n                setFormData({ ...formData, current: !current });\r\n                toggleDisabled(!toDateDisabled);\r\n              }}\r\n            />{' '}\r\n            Current Job\r\n          </p>\r\n        </div>\r\n        <div class='form-group'>\r\n          <h4>To Date</h4>\r\n          <input\r\n            type='date'\r\n            name='to'\r\n            value={to}\r\n            onChange={e => onChange(e)}\r\n            disabled={toDateDisabled ? 'disabled' : ''}\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <textarea\r\n            name='description'\r\n            cols='30'\r\n            rows='5'\r\n            placeholder='Job Description'\r\n            value={description}\r\n            onChange={e => onChange(e)}\r\n          ></textarea>\r\n        </div>\r\n        <input type='submit' class='btn btn-primary my-1' />\r\n        <a class='btn btn-light my-1' href='dashboard.html'>\r\n          Go Back\r\n        </a>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAddExperience.propTypes = {\r\n  addExperience: PropTypes.func.isRequired //ptfr\r\n};\r\n\r\nexport default connect(null, { addExperience })(withRouter(AddExperience));\r\n","import React, { Fragment, useState } from 'react'; //racfp shortcut will give us a form with some state\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addEducation } from '../../actions/profile';\r\n\r\nconst AddEducation = ({ addEducation, history }) => {\r\n  //using State hook can ultimately be nicer and cleaner\r\n  const [formData, setFormData] = useState({\r\n    school: '',\r\n    degree: '',\r\n    fieldofstudy: '',\r\n    from: '',\r\n    to: '', //disable to if current is true\r\n    current: false,\r\n    description: ''\r\n  });\r\n\r\n  const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n  const {\r\n    school,\r\n    degree,\r\n    fieldofstudy,\r\n    from,\r\n    to,\r\n    current,\r\n    description\r\n  } = formData;\r\n\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value }); //object state with current form data, take our key (name), and set to target.value\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 class='large text-primary'>Add Your Education</h1>\r\n      <p class='lead'>\r\n        <i class='fas fa-code-branch'></i> Add any school or bootcamp that you\r\n        have attended\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form\r\n        class='form'\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          addEducation(formData, history);\r\n        }}\r\n      >\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* School or Bootcamp'\r\n            name='school'\r\n            value={school}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Degree or Certificate'\r\n            name='degree'\r\n            value={degree}\r\n            onChange={e => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Field of Study'\r\n            name='fieldofstudy'\r\n            value={fieldofstudy}\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <h4>From Date</h4>\r\n          <input\r\n            type='date'\r\n            name='from'\r\n            value={from}\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <p>\r\n            <input\r\n              type='checkbox'\r\n              name='current'\r\n              checked={current}\r\n              value={current}\r\n              onChange={e => {\r\n                setFormData({ ...formData, current: !current });\r\n                toggleDisabled(!toDateDisabled);\r\n              }}\r\n            />{' '}\r\n            Current School\r\n          </p>\r\n        </div>\r\n        <div class='form-group'>\r\n          <h4>To Date</h4>\r\n          <input\r\n            type='date'\r\n            name='to'\r\n            value={to}\r\n            onChange={e => onChange(e)}\r\n            disabled={toDateDisabled ? 'disabled' : ''}\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <textarea\r\n            name='description'\r\n            cols='30'\r\n            rows='5'\r\n            placeholder='Program Description'\r\n            value={description}\r\n            onChange={e => onChange(e)}\r\n          ></textarea>\r\n        </div>\r\n        <input type='submit' class='btn btn-primary my-1' />\r\n        <a class='btn btn-light my-1' href='dashboard.html'>\r\n          Go Back\r\n        </a>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAddEducation.propTypes = {\r\n  addEducation: PropTypes.func.isRequired //ptfr\r\n};\r\n\r\nexport default connect(null, { addEducation })(withRouter(AddEducation));\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n//just a holder, dont need connect this time\r\n\r\nconst ProfileItem = ({\r\n  profile: {\r\n    user: { _id, name, avatar },\r\n    status,\r\n    company,\r\n    location,\r\n    skills //can reference directly now b/c it is deconstructed\r\n  }\r\n}) => {\r\n  return (\r\n    <div className='profile bg-light'>\r\n      <img src={avatar} alt='' className='round-img' />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>\r\n          {status} {company && <span> at {company}</span>}\r\n        </p>\r\n        <p className='my-1'>{location && <span>{location}</span>}</p>\r\n        <Link to={`/profile/${_id}`} className='btn btn-primary'>\r\n          {' '}\r\n          View Profile{' '}\r\n        </Link>\r\n      </div>\r\n      <ul>\r\n        {skills.slice(0, 4).map((skill, index) => (\r\n          <li key={index} className='text-primary'>\r\n            <i className='fas fa-check'></i> {skill}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileItem.propTypes = {\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProfileItem;\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Spinner from '../layout/Spinner';\r\nimport { connect } from 'react-redux';\r\nimport ProfileItem from './ProfileItem';\r\nimport { getProfiles } from '../../actions/profile';\r\n\r\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\r\n  useEffect(() => {\r\n    getProfiles();\r\n  }, [getProfiles]); //want useEffect to run once, so put in an empty set of brackets\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n          <h1 className='large text-primary'>Developers</h1>\r\n          <p className='lead'>\r\n            <i className='fab fa-connectdevelop'></i> Browse and connect with\r\n            developers\r\n          </p>\r\n          <div className='profiles'>\r\n            {profiles.length > 0 ? (\r\n              profiles.map(profile => (\r\n                <ProfileItem key={profile._id} profile={profile} />\r\n              ))\r\n            ) : (\r\n              <h4>No profiles found...</h4>\r\n            )}\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProfiles.propTypes = {\r\n  getProfiles: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileTop = ({\r\n  profile: {\r\n    status,\r\n    company,\r\n    location,\r\n    website,\r\n    social,\r\n    user: { name, avatar }\r\n  }\r\n}) => {\r\n  return (\r\n    <div class='profile-top bg-primary p-2'>\r\n      <img class='round-img my-1' src={avatar} alt='' />\r\n      <h1 class='large'>{name}</h1>\r\n      <p class='lead'>\r\n        {status} {company && <span> at {company} </span>}\r\n      </p>\r\n      <p>{location && <span>{location}</span>}</p>\r\n      <div class='icons my-1'>\r\n        {website && (\r\n          <a href={website} target='_blank' rel='noopener noreferrer'>\r\n            <i class='fas fa-globe fa-2x'></i>\r\n          </a>\r\n        )}\r\n        {social && social.twitter && (\r\n          <a href={social.twitter} target='_blank' rel='noopener noreferrer'>\r\n            <i class='fab fa-twitter fa-2x'></i>\r\n          </a>\r\n        )}\r\n        {social && social.facebook && (\r\n          <a href={social.facebook} target='_blank' rel='noopener noreferrer'>\r\n            <i class='fab fa-facebook fa-2x'></i>\r\n          </a>\r\n        )}\r\n        {social && social.linkedin && (\r\n          <a href={social.linkedin} target='_blank' rel='noopener noreferrer'>\r\n            <i class='fab fa-linkedin fa-2x'></i>\r\n          </a>\r\n        )}\r\n        {social && social.youtube && (\r\n          <a href={social.youtube} target='_blank' rel='noopener noreferrer'>\r\n            <i class='fab fa-youtube fa-2x'></i>\r\n          </a>\r\n        )}\r\n        {social && social.instagram && (\r\n          <a href={social.instagram} target='_blank' rel='noopener noreferrer'>\r\n            <i class='fab fa-instagram fa-2x'></i>\r\n          </a>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileTop.propTypes = {\r\n  profile: PropTypes.object.isRequired //ptor\r\n};\r\n\r\nexport default ProfileTop;\r\n\r\n//racfp shortcut\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileAbout = ({\r\n  profile: {\r\n    bio,\r\n    skills,\r\n    user: { name }\r\n  }\r\n}) => (\r\n  <div class='profile-about bg-light p-2'>\r\n    {bio && (\r\n      <Fragment>\r\n        <h2 class='text-primary'>{name.trim().split(' ')[0]}'s Bio</h2>\r\n        <p>{bio}</p>\r\n      </Fragment>\r\n    )}\r\n\r\n    <div class='line'></div>\r\n    <h2 class='text-primary'>Skill Set</h2>\r\n    <div class='skills'>\r\n      {skills.map((skill, index) => (\r\n        <div key={index} className='p-1'>\r\n          <i className='fas fa-check' />\r\n          {skill}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nProfileAbout.propTypes = {\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProfileAbout;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\n\r\nconst ProfileExperience = ({\r\n  experience: { company, title, location, current, to, from, description }\r\n}) => (\r\n  <div>\r\n    <h3 className='text-dark'>{company}</h3>\r\n    <p>\r\n      <Moment format='YYYY/MM/DD'>{from}</Moment> -{' '}\r\n      {!to ? 'Now' : <Moment format='YYYY/MM/DD'>{to}</Moment>}\r\n    </p>\r\n    <p>\r\n      <strong>Postion: </strong> {title}\r\n    </p>\r\n    <p>\r\n      <strong>Description: </strong>\r\n      {description}\r\n    </p>\r\n  </div>\r\n);\r\n\r\nProfileExperience.propTypes = {\r\n  experience: PropTypes.array.isRequired //array, so ptar\r\n};\r\n\r\nexport default ProfileExperience;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\n\r\nconst ProfileEducation = ({\r\n  education: { school, degree, fieldofstudy, current, to, from, description }\r\n}) => (\r\n  <div>\r\n    <h3 className='text-dark'>{school}</h3>\r\n    <p>\r\n      <Moment format='YYYY/MM/DD'>{from}</Moment> -{' '}\r\n      {!to ? 'Now' : <Moment format='YYYY/MM/DD'>{to}</Moment>}\r\n    </p>\r\n    <p>\r\n      <strong>Degree: </strong> {degree}\r\n    </p>\r\n    <p>\r\n      <strong>Field Of Study</strong> {fieldofstudy}\r\n    </p>\r\n    <p>\r\n      <strong>Description: </strong>\r\n      {description}\r\n    </p>\r\n  </div>\r\n);\r\n\r\nProfileEducation.propTypes = {\r\n  education: PropTypes.array.isRequired //array, so ptar\r\n};\r\n\r\nexport default ProfileEducation;\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux'; //always use connect when calling an action\r\nimport Spinner from '../layout/Spinner';\r\nimport { getGithubRepos } from '../../actions/profile';\r\n\r\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\r\n  useEffect(() => {\r\n    getGithubRepos(username);\r\n  }, [getGithubRepos]); //claiming github repos as a dependency, not going to actually call githubrepos\r\n  return (\r\n    <div className='profile-github'>\r\n      <h2 className='text-primary my-1'>Github Repos</h2>\r\n      {repos === null ? (\r\n        <Spinner />\r\n      ) : (\r\n        repos.map(repo => (\r\n          <div key={repo._id} className='repo bg-white p-1 my-1'>\r\n            <div>\r\n              <h4>\r\n                <a\r\n                  href={repo.html_url}\r\n                  target='_blank'\r\n                  rel='noopener noreferrer'\r\n                >\r\n                  {repo.name}\r\n                </a>\r\n              </h4>\r\n              <p>{repo.description}</p>\r\n            </div>\r\n            <div>\r\n              <ul>\r\n                <li className='badge badge-primary'>\r\n                  Stars: {repos.stargazers_count}\r\n                </li>\r\n                <li className='badge badge-dark'>\r\n                  Watchers: {repos.watchers_count}\r\n                </li>\r\n                <li className='badge badge-light'>\r\n                  Forks: {repos.forks_count}\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileGithub.propTypes = {\r\n  getGithubRepos: PropTypes.func.isRequired,\r\n  repos: PropTypes.array.isRequired,\r\n  username: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  repos: state.profile.repos\r\n});\r\n\r\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport ProfileTop from './ProfileTop';\r\nimport ProfileAbout from './ProfileAbout';\r\nimport ProfileExperience from './ProfileExperience';\r\nimport ProfileEducation from './ProfileEducation';\r\nimport ProfileGithub from './ProfileGithub';\r\nimport { getProfileById } from '../../actions/profile';\r\n\r\nconst Profile = ({\r\n  getProfileById,\r\n  profile: { profile, loading },\r\n  auth,\r\n  match\r\n}) => {\r\n  useEffect(() => {\r\n    getProfileById(match.params.id);\r\n  }, [getProfileById]);\r\n  return (\r\n    <Fragment>\r\n      {profile === null || loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n          <Link to='/profiles' className='btn btn-light'>\r\n            Back To Profiles\r\n          </Link>\r\n          {auth.isAuthenticated &&\r\n            auth.loading === false &&\r\n            auth.user._id === profile.user._id && (\r\n              <Link to='/edit-profile' className='btn btn-dark'>\r\n                Edit Profile\r\n              </Link>\r\n            )}\r\n          <div class='profile-grid my-1'>\r\n            <ProfileTop profile={profile} />\r\n            <ProfileAbout profile={profile} />\r\n            <div className='profile-exp bg-white p-2'>\r\n              <h2 className='text-primary'>Experience</h2>\r\n              {profile.experience.length > 0 ? (\r\n                <Fragment>\r\n                  {profile.experience.map(experience => (\r\n                    <ProfileExperience\r\n                      key={experience._id}\r\n                      experience={experience}\r\n                    />\r\n                  ))}\r\n                </Fragment>\r\n              ) : (\r\n                <h4>No experience credentials</h4>\r\n              )}\r\n            </div>\r\n            <div className='profile-edu bg-white p-2'>\r\n              <h2 className='text-primary'>Education</h2>\r\n              {profile.education.length > 0 ? (\r\n                <Fragment>\r\n                  {profile.education.map(education => (\r\n                    <ProfileEducation\r\n                      key={education._id}\r\n                      education={education}\r\n                    />\r\n                  ))}\r\n                </Fragment>\r\n              ) : (\r\n                <h4>No education credentials</h4>\r\n              )}\r\n            </div>\r\n            {profile.githubusername && (\r\n              <ProfileGithub username={profile.githubusername} />\r\n            )}\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  getProfileById: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  //bring in auth state because if they are logged in, and the profile matches, there should be an edit button\r\n  profile: state.profile,\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfileById })(Profile);\r\n//racfp\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom'; //we are going to link to the single post page that has all the comments\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { addLike, removeLike, deletePost } from '../../actions/post';\r\n\r\nconst PostItem = ({\r\n  addLike,\r\n  removeLike,\r\n  deletePost,\r\n  auth,\r\n  post: { _id, text, name, avatar, user, likes, comments, date },\r\n  showActions\r\n}) => (\r\n  <div class='post bg-white p-1 my-1'>\r\n    <div>\r\n      <Link to={`/profile/${user}`}>\r\n        <img class='round-img' src={avatar} alt='' />\r\n        <h4>{name}</h4>\r\n      </Link>\r\n    </div>\r\n    <div>\r\n      <p class='my-1'>{text}</p>\r\n      <p class='post-date'>\r\n        Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\r\n      </p>\r\n\r\n      {showActions && (\r\n        <Fragment>\r\n          <button\r\n            onClick={e => addLike(_id)}\r\n            type='button'\r\n            class='btn btn-light'\r\n          >\r\n            <i class='fas fa-thumbs-up' />{' '}\r\n            <span>{likes.length > 0 && <span>{likes.length}</span>}</span>\r\n          </button>\r\n          <button\r\n            onClick={e => removeLike(_id)}\r\n            type='button'\r\n            class='btn btn-light'\r\n          >\r\n            <i class='fas fa-thumbs-down'></i>\r\n          </button>\r\n          <Link to={`/posts/${_id}`} class='btn btn-primary'>\r\n            Discussion{' '}\r\n            {comments.length > 0 && (\r\n              <span class='comment-count'>{comments.length}</span>\r\n            )}\r\n          </Link>\r\n          {!auth.loading && user === auth.user._id && (\r\n            <button\r\n              onClick={e => deletePost(_id)}\r\n              type='button'\r\n              class='btn btn-danger'\r\n            >\r\n              <i class='fas fa-times'></i>\r\n            </button>\r\n          )}\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nPostItem.defaultProps = {\r\n  showActions: true\r\n};\r\n\r\nPostItem.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  addLike: PropTypes.func.isRequired,\r\n  removeLike: PropTypes.func.isRequired,\r\n  deletePost: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(\r\n  PostItem\r\n);\r\n","import axios from 'axios'; //using axios so we can make requests\r\nimport { setAlert } from './alert';\r\nimport {\r\n  GET_POSTS,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POST,\r\n  ADD_POST,\r\n  GET_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT,\r\n} from './types';\r\n\r\n//method to GET POSTS\r\nexport const getPosts = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get('/api/posts');\r\n\r\n    dispatch({\r\n      type: GET_POSTS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    //similar to profile error\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//Add like\r\nexport const addLike = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.put(`/api/posts/like/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id, likes: res.data }, //what's returned is an array of likes\r\n    });\r\n  } catch (err) {\r\n    //similar to profile error\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Remove like\r\nexport const removeLike = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.put(`/api/posts/unlike/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id, likes: res.data }, //what's returned is an array of likes\r\n    });\r\n  } catch (err) {\r\n    //similar to profile error\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//Delete Post\r\nexport const deletePost = (id) => async (dispatch) => {\r\n  try {\r\n    await axios.delete(`/api/posts/${id}`); //don't need res variable\r\n\r\n    dispatch({\r\n      type: DELETE_POST,\r\n      payload: id, //in reducer, we can filter out post that got deleted by id\r\n    });\r\n\r\n    dispatch(setAlert('Post removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//Add Post\r\nexport const addPost = (formData) => async (dispatch) => {\r\n  //add config b/c sending data of config object with our headers\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n  try {\r\n    const res = await axios.post('/api/posts', formData, config);\r\n\r\n    dispatch({\r\n      type: ADD_POST,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert('Post created', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//method to GET POST\r\nexport const getPost = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/posts/${id}`);\r\n\r\n    dispatch({\r\n      type: GET_POST,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    //similar to profile error\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//Add Comment\r\nexport const addComment = (postId, formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n  try {\r\n    const res = await axios.post(\r\n      `/api/posts/comment/${postId}`,\r\n      formData,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ADD_COMMENT,\r\n      payload: res.data, //when we add comment, it returns the comments array\r\n    });\r\n\r\n    dispatch(setAlert('Comment added', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n//Delete Comment\r\nexport const deleteComment = (postId, commentId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\r\n\r\n    dispatch({\r\n      type: REMOVE_COMMENT,\r\n      payload: commentId, //payload is commentId so we know which comment to remove in the state\r\n    });\r\n\r\n    dispatch(setAlert('Comment removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addPost } from '../../actions/post';\r\n\r\nconst PostForm = ({ addPost }) => {\r\n  const [text, setText] = useState(''); //only have one field for this form, so we only need one string in our state, don't need to use formdata\r\n  return (\r\n    <div class='post-form'>\r\n      <div class='bg-primary p'>\r\n        <h3>Say Something...</h3>\r\n      </div>\r\n      <form\r\n        class='form my-1'\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          addPost({ text }); //this will be the formdata within our action function\r\n          setText(''); //clear form with an empty string\r\n        }}\r\n      >\r\n        <textarea\r\n          name='text'\r\n          cols='30'\r\n          rows='5'\r\n          placeholder='Create a post'\r\n          value={text}\r\n          onChange={e => setText(e.target.value)}\r\n          required\r\n        ></textarea>\r\n        <input type='submit' class='btn btn-dark my-1' value='Submit' />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nPostForm.propTypes = {\r\n  addPost: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { addPost })(PostForm);\r\n","//this is the parent\r\nimport React, { Fragment, useEffect } from 'react'; //useEffect will allow us to grab GET_POSTS action\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getPosts } from '../../actions/post';\r\nimport PostItem from './PostItem';\r\nimport PostForm from './PostForm';\r\nimport { get } from 'mongoose';\r\n\r\nconst Posts = ({ getPosts, post: { posts, loading } }) => {\r\n  //should fetch post from api and put it into the state when it loads the component\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, [getPosts]);\r\n\r\n  return loading ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Posts</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Welcome to the community\r\n      </p>\r\n      <PostForm />\r\n      <div className='posts'>\r\n        {posts.map(post => (\r\n          <PostItem key={post._id} post={post} />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  ); //ternary to display the spinner if loading and to generate fragment if not loading\r\n};\r\n\r\nPosts.propTypes = {\r\n  getPosts: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  post: state.post\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPosts })(Posts);\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addComment } from '../../actions/post';\r\n\r\nconst CommentForm = ({ postId, addComment }) => {\r\n  const [text, setText] = useState('');\r\n  return (\r\n    <div class='post-form'>\r\n      <div class='bg-primary p'>\r\n        <h3>Leave a Comment</h3>\r\n      </div>\r\n      <form\r\n        class='form my-1'\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addComment(postId, { text }); //this will be the formdata within our action function\r\n          setText(''); //clear form with an empty string\r\n        }}\r\n      >\r\n        <textarea\r\n          name='text'\r\n          cols='30'\r\n          rows='5'\r\n          placeholder='Create a post'\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n          required\r\n        ></textarea>\r\n        <input type='submit' class='btn btn-dark my-1' value='Submit' />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n  addComment: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addComment })(CommentForm);\r\n","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux'; //we are going to have a deleteComment action\r\nimport Moment from 'react-moment';\r\nimport { deleteComment } from '../../actions/post';\r\n\r\nconst CommentItem = ({\r\n  postId,\r\n  comment: { _id, text, name, avatar, user, date },\r\n  auth,\r\n  deleteComment,\r\n}) => (\r\n  <div class='post bg-white p-1 my-1'>\r\n    <div>\r\n      <Link to={`/profile/${user}`}>\r\n        <img class='round-img' src={avatar} alt='' />\r\n        <h4>{name}</h4>\r\n      </Link>\r\n    </div>\r\n    <div>\r\n      <p class='my-1'>{text}</p>\r\n      <p class='post-date'>\r\n        Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\r\n      </p>\r\n      {!auth.loading && user === auth.user._id && (\r\n        <button\r\n          onClick={(e) => deleteComment(postId, _id)}\r\n          type='button'\r\n          className='btn btn-danger'\r\n        >\r\n          <i className='fas fa-times'></i>\r\n        </button>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nCommentItem.propTypes = {\r\n  postId: PropTypes.number.isRequired,\r\n  comment: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  deleteComment: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport PostItem from '../posts/PostItem';\r\nimport CommentForm from '../post/CommentForm';\r\nimport CommentItem from '../post/CommentItem';\r\nimport { getPost } from '../../actions/post';\r\n\r\nconst Post = ({ getPost, post: { post, loading }, match }) => {\r\n  useEffect(() => {\r\n    getPost(match.params.id);\r\n  }, [getPost]);\r\n\r\n  return loading || post === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <Link to='/posts' className='btn'>\r\n        Back To Posts\r\n      </Link>\r\n      <PostItem post={post} showActions={false} />\r\n      <CommentForm postId={post._id} />\r\n      <div className='comments'>\r\n        {post.comments.map((comment) => (\r\n          <CommentItem key={comment._id} comment={comment} postId={post._id} />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPost.propTypes = {\r\n  getPost: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  post: state.post,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPost })(Post);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nexport const PrivateRoute = (\r\n  { component: Component, auth: { isAuthenticated, loading }, ...rest } //anything passed in the rest, we want here\r\n) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      !isAuthenticated && !loading ? (\r\n        <Redirect to='/login' />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n); //...rest will take in anything else that's passed in\r\n//will use private route, and use render prop, if user is not auth and not loading, then we will redirect to login, otherwise component will load\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","//function that takes in a piece of state (any state that has to do with alerts) and an action.\r\n//An action is going to be dispatched from an actions file\r\n\r\n//An example of what a typical alert may look like\r\n/*\r\nconst initialState = [\r\n    {\r\n        id:1,\r\n        msg: 'Please log in',\r\n        alertType: 'success',\r\n    },\r\n]\r\n*/\r\n\r\nimport { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default function(state = initialState, action) {\r\n  //action will contain a type, and a payload AKA the data. Sometimes there is no data, so you would just call an action type\r\n  const { type, payload } = action; //destructuring, so instead of writing action.type, you can just write type, etc.\r\n\r\n  switch (type) {\r\n    case SET_ALERT: //SET_ALERT will be a type, this is a javascript switch\r\n      return [...state, payload]; //state is immutable, adding an alert, including states that are already there, then add new alert\r\n    case REMOVE_ALERT:\r\n      return state.filter(alert => alert.id !== payload); //going to return all alerts except for the one that matches the payload\r\n    default:\r\n      return state; //every reducer I create is going to have a default case of return state\r\n  }\r\n}\r\n","import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  ACCOUNT_DELETED\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem('token'), //default for token in our state\r\n  isAuthenticated: null, //if successful, will be set to true\r\n  loading: true, //make sure that request has been made to the backend and we get a response\r\n  user: null\r\n}; //our state for authentication\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true, //token worked, now logged in\r\n        loading: false,\r\n        user: payload //will return everything but the password\r\n      };\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem('token', payload.token); //if Register_success, set the token\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        loading: false\r\n      };\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR: //will clear token from local storage\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n    case ACCOUNT_DELETED:\r\n      localStorage.removeItem('token'); //retrieve token from local storage and set to null if there is one\r\n      return {\r\n        ...state,\r\n        token: null, //here we are setting the value to null vs. what is done in the success actio\r\n        isAuthenticated: false,\r\n        loading: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_PROFILE,\r\n  PROFILE_ERROR,\r\n  CLEAR_PROFILE,\r\n  UPDATE_PROFILE,\r\n  GET_PROFILES,\r\n  GET_REPOS\r\n} from '../actions/types';\r\n\r\n//actions to get profile, create it, clear it from the state, etc.\r\n\r\nconst initialState = {\r\n  //if we visit another user's page, this will be added as well\r\n  profile: null,\r\n  profiles: [],\r\n  repos: [],\r\n  loading: true,\r\n  error: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  //state management of redux, will see these messages if successfully fetching profile\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_PROFILE:\r\n    case UPDATE_PROFILE:\r\n      return {\r\n        ...state, //get current state\r\n        profile: payload,\r\n        loading: false\r\n      };\r\n    case GET_PROFILES:\r\n      return {\r\n        ...state, //current state\r\n        profiles: payload,\r\n        loading: false\r\n      };\r\n    case PROFILE_ERROR: //you can also see this message if successful login, but the user has no profile to speak of\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n        profile: null //this will prevent a newly registered user from seeing and editing the the previous user's info. This is in the case where a guest user browses and dev profile and then registers.\r\n      };\r\n    case CLEAR_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: null,\r\n        repos: [],\r\n        loading: false\r\n      };\r\n    case GET_REPOS:\r\n      return {\r\n        ...state,\r\n        repos: payload,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_POSTS,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POST,\r\n  ADD_POST,\r\n  GET_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  post: null,\r\n  loading: true,\r\n  error: {}, //going to work like how profile error works\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: payload,\r\n        loading: false,\r\n      };\r\n    case GET_POST:\r\n      return {\r\n        ...state,\r\n        post: payload,\r\n        loading: false,\r\n      };\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        posts: [payload, ...state.posts], //makes a copy of current posts array and adds our payload\r\n        loading: false,\r\n      };\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter((post) => post._id !== payload), //returning all posts except the id of deleted post\r\n        loading: false,\r\n      };\r\n    case POST_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n    case UPDATE_LIKES:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map((post) =>\r\n          post._id === payload.id ? { ...post, likes: payload.likes } : post\r\n        ),\r\n        loading: false,\r\n      }; //map thru the posts, for each post, check if its the payload post, then return new state with everything in that post, and return the array of likes, updating the value here\r\n    case ADD_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: { ...state.post, comments: payload }, //payload is all the comments\r\n        loading: false,\r\n      };\r\n    case REMOVE_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: {\r\n          ...state,\r\n          comments: state.post.comments.filter(\r\n            (comment) => comment._id !== payload\r\n          ),\r\n        },\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport alert from './alert';\r\nimport auth from './auth';\r\nimport profile from './profile';\r\nimport post from './post';\r\n\r\nexport default combineReducers({\r\n  alert,\r\n  auth,\r\n  profile,\r\n  post\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Navbar from './components/layout/Navbar';\r\nimport Landing from './components/layout/Landing';\r\nimport Register from './components/auth/Register';\r\nimport Login from './components/auth/Login';\r\nimport Alert from './components/layout/Alert';\r\nimport Dashboard from './components/dashboard/Dashboard';\r\nimport CreateProfile from './components/profile-forms/CreateProfile';\r\nimport EditProfile from './components/profile-forms/EditProfile';\r\nimport AddExperience from './components/profile-forms/AddExperience';\r\nimport AddEducation from './components/profile-forms/AddEducation';\r\nimport Profiles from './components/profiles/Profiles';\r\nimport Profile from './components/profile/Profile';\r\nimport Posts from './components/posts/Posts';\r\nimport Post from './components/post/Post';\r\nimport PrivateRoute from './components/routing/PrivateRoute';\r\n\r\n//Redux\r\nimport { Provider } from 'react-redux'; //package that will connect the two systems\r\nimport store from './store';\r\nimport { loadUser } from './actions/auth';\r\nimport setAuthToken from './utils/setAuthToken';\r\n\r\nimport './App.css';\r\n\r\nif (localStorage.token) {\r\n  setAuthToken(localStorage.token);\r\n}\r\n\r\nconst App = () => {\r\n  useEffect(() => {\r\n    store.dispatch(loadUser()); //when state updates, useEffect will keep running and be constant loop unless we put in empty brackets, like a componentDidMount\r\n  }, []); //run effect and clean it up only once --> look up on React docs\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <Fragment>\r\n          <Navbar />\r\n          <Route exact path='/' component={Landing} />\r\n          <section className='container'>\r\n            <Alert />\r\n            <Switch>\r\n              <Route exact path='/register' component={Register} />\r\n              <Route exact path='/login' component={Login} />\r\n              <Route exact path='/profiles' component={Profiles} />\r\n              <Route exact path='/profile/:id' component={Profile} />\r\n              <PrivateRoute exact path='/dashboard' component={Dashboard} />\r\n              <PrivateRoute\r\n                exact\r\n                path='/create-profile'\r\n                component={CreateProfile}\r\n              />\r\n              <PrivateRoute\r\n                exact\r\n                path='/edit-profile'\r\n                component={EditProfile}\r\n              />\r\n              <PrivateRoute\r\n                exact\r\n                path='/add-experience'\r\n                component={AddExperience}\r\n              />\r\n              <PrivateRoute\r\n                exact\r\n                path='/add-education'\r\n                component={AddEducation}\r\n              />\r\n              <PrivateRoute exact path='/posts' component={Posts} />\r\n              <PrivateRoute exact path='/posts/:id' component={Post} />\r\n            </Switch>\r\n          </section>\r\n        </Fragment>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}